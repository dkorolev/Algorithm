long long mulmod(long long a,long long b,long long c){
    long long x = 0,y=a%c;
    while(b > 0){
        if(b%2 == 1)	x = (x+y)%c;
        y = (y*2)%c;	b /= 2;
    }
    return x%c;
}
long long modulo(long long a,long long b,long long c){
    unsigned long long x=1,y=a; 
    while(b > 0){
		if(b%2 == 1)
			if( x<(1<<30) && y<(1<30) )	x=(x*y)%c;
			else	x=mulmod(x,y,c);

		if( y<(1<<30) )	 y=(y*y)%c;	// squaring the base
		else	y = mulmod(y,y,c);
        b /= 2;
    }
    return x%c;
}

bool Miller(long long p,int iteration=10){
	int x[]={2, 3, 5, 7, 11, 13, 17, 31, 61, 73};    
	if(p<2)	return false;

    if(p!=2 && p%2==0)	return false;

    long long s=p-1;
    while(s%2==0)	s/=2;

    for(int i=0;i<iteration;i++){
		long long a= x[i],temp=s;

		if(a>=p)	continue;

        long long mod=modulo(a,temp,p);
        while(temp!=p-1 && mod!=1 && mod!=p-1){
            mod=mulmod(mod,mod,p);
            temp *= 2;
        }
        if(mod!=p-1 && mod!=1)	return false;
    }
    return true;
}
